diff --git a/OS/src/OSCommonInterfaces/OSInstance.cpp b/OS/src/OSCommonInterfaces/OSInstance.cpp
index 725c1cc..ef9868b 100644
--- a/OS/src/OSCommonInterfaces/OSInstance.cpp
+++ b/OS/src/OSCommonInterfaces/OSInstance.cpp
@@ -5950,6 +5950,7 @@ bool OSInstance::getSparseJacobianFromColumnMajor( )
             {
                 m_miJacIndex[ iTemp] = posVarIdx->first;
                 m_mdJacValue[ iTemp] = 0;
+/* ticket 55 */ posVarIdx->second = iTemp;
                 iTemp++;
             }
         }
@@ -6116,6 +6117,7 @@ bool OSInstance::getSparseJacobianFromRowMajor( )
             {
                 m_miJacIndex[ k] = posVarIdx->first;
                 m_mdJacValue[ k] = 0;
+/* ticket 55 */ posVarIdx->second = k;
                 k++;
             }
         }
@@ -6624,9 +6626,8 @@ bool OSInstance::getFirstOrderResults(double *x, double *objLambda, double *conM
                         if( (*expTree->mapVarIdx).find( m_miNonLinearVarsReverseMap[ i]) != (*expTree->mapVarIdx).end()  )
                         {
                             jacIndex = (*m_mapExpressionTreesMod[ idx]->mapVarIdx)[ m_miNonLinearVarsReverseMap[ i]];
-                            jstart = m_miJacStart[ idx] + m_miJacNumConTerms[ idx];
                             // kipp change 1 to number of objective functions
-                            m_mdJacValue[ jstart + jacIndex] = m_vdYjacval[m_iObjectiveNumberNonlinear + rowNum];
+                            m_mdJacValue[jacIndex] = m_vdYjacval[m_iObjectiveNumberNonlinear + rowNum];
                         }
                         rowNum++;
                     }//end Jacobian calculation
@@ -6714,8 +6715,7 @@ bool OSInstance::getSecondOrderResults(double *x, double *objLambda, double *con
                     if( (*expTree->mapVarIdx).find( m_miNonLinearVarsReverseMap[ i]) != (*expTree->mapVarIdx).end()  )
                     {
                         jacIndex = (*m_mapExpressionTreesMod[ idx]->mapVarIdx)[ m_miNonLinearVarsReverseMap[ i]];
-                        jstart = m_miJacStart[ idx] + m_miJacNumConTerms[ idx];
-                        m_mdJacValue[ jstart + jacIndex] = m_vdYjacval[m_iObjectiveNumberNonlinear + rowNum];
+                        m_mdJacValue[jacIndex] = m_vdYjacval[m_iObjectiveNumberNonlinear + rowNum];
                     }
                     rowNum++;
                 }//end Jacobian calculation
